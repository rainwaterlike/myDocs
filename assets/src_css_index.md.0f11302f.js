import{_ as s,c as a,o as n,O as e}from"./chunks/framework.3f5d400a.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"src/css/index.md","filePath":"src/css/index.md","lastUpdated":1700899084000}'),l={name:"src/css/index.md"},p=e(`<h2 id="flex布局" tabindex="-1">flex布局 <a class="header-anchor" href="#flex布局" aria-label="Permalink to &quot;flex布局&quot;">​</a></h2><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>flex-grow</td><td>一个数字，规定项目将相对于其他灵活的项目进行扩展的量。</td></tr><tr><td>flex-shrink</td><td>一个数字，规定项目将相对于其他灵活的项目进行收缩的量。</td></tr><tr><td>flex-basis</td><td>项目的长度。合法值：&quot;auto&quot;、&quot;inherit&quot; 或一个后跟 &quot;%&quot;、&quot;px&quot;、&quot;em&quot; 或任何其他长度单位的数字。</td></tr><tr><td>auto</td><td>与 1 1 auto 相同。</td></tr><tr><td>none</td><td>与 0 0 auto 相同。</td></tr><tr><td>initial</td><td>设置该属性为它的默认值，即为 0 1 auto。请参阅 initial。</td></tr><tr><td>inherit</td><td>从父元素继承该属性。请参阅 inherit。</td></tr></tbody></table><h3 id="文字间隔效果" tabindex="-1">文字间隔效果 <a class="header-anchor" href="#文字间隔效果" aria-label="Permalink to &quot;文字间隔效果&quot;">​</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">accountType</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">微</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">信</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">accountType</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">56px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* 两端对齐，项目之间的间隔都相等，从而实现文字间隔 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> space-between</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="flex-布局中子元素设置宽度无效" tabindex="-1">flex 布局中子元素设置宽度无效 <a class="header-anchor" href="#flex-布局中子元素设置宽度无效" aria-label="Permalink to &quot;flex 布局中子元素设置宽度无效&quot;">​</a></h3><p>父元素设置了<code>display: flex</code>所以该父元素下所有的子元素都会默认加上<code>flex: 0 1 auto</code>。</p><p>其中 <code>1</code> 就是 <code>flex</code> 中的 <code>flex-shrink</code> 属性，表示开启元素的收缩功能，所以子元素宽度才会失效。</p><p>解决方案：</p><p>方案1 flex: 0 0 auto; width: 200px;</p><p>方案2 flex: 0 0 200px;</p><p>方案3（推荐） flex-shrink: 0; width: 200px;</p><p>方案4 min-width: 200px;</p><h2 id="calc动态计算" tabindex="-1">calc动态计算 <a class="header-anchor" href="#calc动态计算" aria-label="Permalink to &quot;calc动态计算&quot;">​</a></h2><p>用 css3 的 计算属性来给高度赋值。</p><p>任何长度值都可以使用calc()函数进行计算。</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">height: calc(100vh - 56px - 80px);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中的100vh代表100%的浏览器视图高度，减去56px(头部高度)、再减去80px(底部高度)，这样就能设置内容区域的高度自适应变化了。</p><h2 id="deep-配合子选择器使用" tabindex="-1">/deep/ 配合子选择器使用 <a class="header-anchor" href="#deep-配合子选择器使用" aria-label="Permalink to &quot;/deep/ 配合子选择器使用&quot;">​</a></h2><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">/deep/ </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">caseinfoFormLabel</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">ant-form-item-label</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="grid布局" tabindex="-1">grid布局 <a class="header-anchor" href="#grid布局" aria-label="Permalink to &quot;grid布局&quot;">​</a></h2><p>使用场景:比如一个横向列表，需要间隔一样，用<code>flex</code>布局的话会选择<code>justify-content:space-between</code>的方式 这种布局在列表只有两项，就变成一头一尾的分布，而不是排在后面的布局，这个时候可以使用grid布局</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">repeat</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1fr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,23),t=[p];function o(r,c,i,d,D,y){return n(),a("div",null,t)}const h=s(l,[["render",o]]);export{u as __pageData,h as default};
